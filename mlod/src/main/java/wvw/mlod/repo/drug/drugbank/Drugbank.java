package wvw.mlod.repo.drug.drugbank;

import java.io.IOException;

import javax.xml.bind.JAXBException;

import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryExecutionFactory;
import com.hp.hpl.jena.query.QueryFactory;
import com.hp.hpl.jena.rdf.model.Model;

import wvw.mlod.config.MlodConfig;
import wvw.mlod.repo.RepositoryException;
import wvw.mlod.repo.drug.DrugRepository;
import wvw.mlod.repo.drug.drugbank.xml.XmlDrugbankParser;
import wvw.query.IQueryResults;
import wvw.query.JenaQueryResults;
import wvw.utils.Timer;
import wvw.utils.Timer.TimeUnits;
import wvw.utils.jena.TdbUtils;
import wvw.utils.log.Log;

/**
 * Drugbank repository. It needs to be loaded from the Drugbank XML dump (found
 * at <a href=
 * "https://www.drugbank.ca/releases/latest">https://www.drugbank.ca/releases/latest</a>).
 * using the {@link #initializeFromXml()} method.
 * 
 * It relies on <a href=
 * "https://www.oracle.com/technical-resources/articles/javase/jaxb.html">JAXB</a>
 * for mapping the XML data to Java objects, and
 * <a href="https://code.google.com/archive/p/jenabean/">Jenabean</a> for then
 * mapping those Java objects to RDF.
 * 
 * 
 * @author William
 *
 */

public class Drugbank extends DrugRepository {

	private Model model;

	public static void main(String[] args) throws Exception {
		Timer.newRun();

		// - prepare
		Timer.start("initializeFromXml");
		Drugbank.initializeFromXml();
		Timer.end("initializeFromXml");

		Timer.printTimes(TimeUnits.SEC);
	}

	public Drugbank() {
		super("Drugbank");

		Timer.start("loadDrugbank");
		load();
		Timer.end("loadDrugbank");
	}

	/**
	 * Loads the repository from the Drugbank XML dump
	 * 
	 * (config.properties needs to be set with location of XML file, as well as
	 * folders for intermediate files.)
	 * 
	 * A series of intermediate files will be generated by this method (see
	 * config.properties) - feel free to remove them afterwards.
	 * 
	 * @throws RepositoryException
	 */

	// total time: ca. 8 min
	// (Lenovo Thinkpad T530, 8GB RAM, Intel Core i7-3520 CPU)

	// - detailed times:
	// initializeFromXml: 459.986323966 sec
	// initializeFromXml/segmentXml: 13.217745294 sec
	// initializeFromXml/parseXml: 193.719921237 sec
	// initializeFromXml/loadTdb: 253.043998014 sec

	public static void initializeFromXml() throws RepositoryException {
		XmlDrugbankParser xdp = new XmlDrugbankParser();

		try {
			// - step 1

			Log.i("segmenting Drugbank XML file");

			Timer.start("segmentXml");

			String xmlFile = MlodConfig.drugbankXmlFile();
			String segmFolder = MlodConfig.drugbankSegmFolder();

			xdp.segmentXml(xmlFile, segmFolder, "drug_segment", 10, Integer.MAX_VALUE);

			Timer.end("segmentXml");

			Log.i("");

			// - step 2

			Log.i("parsing Drugbank XML segments");

			Timer.start("parseXml");

			String rdfFolder = MlodConfig.drugbankRdfFolder();

			xdp.parseXmlSegments(segmFolder, rdfFolder, 10, 10);

			Timer.end("parseXml");

			Log.i("");

			// - step 3

			Timer.start("loadTdb");

			Log.i("loading Drugbank RDF into Jena TDB");

			String tdbFolder = MlodConfig.drugbankTdbFolder();

			TdbUtils.initFromFolder(tdbFolder, rdfFolder, "N3");

			Timer.end("loadTdb");

			Log.i("");

		} catch (JAXBException | IOException e) {
			throw new RepositoryException(e);
		}
	}

	private void load() {
		model = TdbUtils.loadModel(MlodConfig.drugbankTdbFolder());
	}

	@Override
	protected IQueryResults execute(String query) {
		Query q = QueryFactory.create(query);

		return new JenaQueryResults(QueryExecutionFactory.create(q, model).execSelect());
	}
}
